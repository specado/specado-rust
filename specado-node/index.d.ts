/* auto-generated by NAPI-RS */
/* eslint-disable */
/** Chat API namespace */
export declare class Chat {
  /** Access to completions API */
  getCompletions(): ChatCompletions
}

/** Chat completions API interface */
export declare class ChatCompletions {
  /** Create a chat completion (async native to Node.js) */
  create(model: string, messages: Array<Message>, temperature?: number | undefined | null, maxTokens?: number | undefined | null): Promise<ChatCompletionResponse>
}

/** Main Specado client */
export declare class Client {
  constructor(config?: object | undefined | null)
  /** Access to chat namespace */
  getChat(): Chat
  /** Get configuration value */
  getConfig(key: string): string | null
  /** Get all configuration keys */
  configKeys(): Array<string>
}

/** Chat completion response */
export interface ChatCompletionResponse {
  id: string
  object: string
  created: number
  model: string
  choices: Array<Choice>
  extensions: Extensions
}

/** Response choice containing the message */
export interface Choice {
  index: number
  message: Message
  finishReason?: string
}

/** Create a new message */
export declare function createMessage(role: string, content: string): Message

/** Response extensions containing routing metadata */
export interface Extensions {
  providerUsed: string
  fallbackTriggered: boolean
  attempts: number
  metadata: Record<string, string>
}

/** Returns a hello world message from the Specado core library. */
export declare function helloWorld(): string

/** JavaScript-compatible message structure */
export interface Message {
  role: string
  content: string
}

/** Returns the version of the Specado library. */
export declare function version(): string
